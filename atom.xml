<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>XGYu</title>
  
  
  <link href="https://xgyu.github.io/atom.xml" rel="self"/>
  
  <link href="https://xgyu.github.io/"/>
  <updated>2021-11-14T10:49:51.829Z</updated>
  <id>https://xgyu.github.io/</id>
  
  <author>
    <name>YuXingguo</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Https原理分析</title>
    <link href="https://xgyu.github.io/2021/11/13/https-yuan-li-fen-xi/"/>
    <id>https://xgyu.github.io/2021/11/13/https-yuan-li-fen-xi/</id>
    <published>2021-11-13T14:40:30.000Z</published>
    <updated>2021-11-14T10:49:51.829Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;昨天挖了个坑，在学习gRPC的认证时，又提到了https的连接过程，所以现在整理成笔记，方便以后查阅。&lt;/p&gt;
&lt;h3 id=&quot;为什么需要HTTPS？&quot;&gt;&lt;a href=&quot;#为什么需要HTTPS？&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Golang笔记(9)--gRPC</title>
    <link href="https://xgyu.github.io/2021/11/03/golang-bi-ji-9-grpc/"/>
    <id>https://xgyu.github.io/2021/11/03/golang-bi-ji-9-grpc/</id>
    <published>2021-11-03T12:24:40.000Z</published>
    <updated>2021-11-08T08:38:59.307Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h3 id=&quot;啥是RPC？&quot;&gt;&lt;a href=&quot;#啥是RPC？&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Golang笔记(8)——Gin</title>
    <link href="https://xgyu.github.io/2021/10/14/golang-bi-ji-8-gin/"/>
    <id>https://xgyu.github.io/2021/10/14/golang-bi-ji-8-gin/</id>
    <published>2021-10-14T11:01:55.000Z</published>
    <updated>2021-11-02T08:00:37.037Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h3 id=&quot;写在开头——记录一些配置问题&quot;&gt;&lt;a href=&quot;#写在开头——记录一些配置问题&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Golang笔记(7)——并发</title>
    <link href="https://xgyu.github.io/2021/09/30/golang-bi-ji-7-bing-fa/"/>
    <id>https://xgyu.github.io/2021/09/30/golang-bi-ji-7-bing-fa/</id>
    <published>2021-09-30T02:59:28.000Z</published>
    <updated>2021-10-14T03:35:56.619Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;并发是Go语言的一个核心概念，轻量级实现并发特性也是Go语言的巨大优势，Go语言得以实现并发的两个重要特性是&lt;strong&gt;goroutine&lt;/strong&gt;和&lt;strong&gt;channel&lt;/strong&gt;，这是Go语言所秉持的CSP（Communicating</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>填坑——设计模式</title>
    <link href="https://xgyu.github.io/2021/09/29/tian-keng-she-ji-mo-shi/"/>
    <id>https://xgyu.github.io/2021/09/29/tian-keng-she-ji-mo-shi/</id>
    <published>2021-09-29T07:41:34.000Z</published>
    <updated>2021-09-29T07:44:43.532Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h3 id=&quot;单例模式&quot;&gt;&lt;a href=&quot;#单例模式&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Golang笔记(6)--接口</title>
    <link href="https://xgyu.github.io/2021/09/26/golang-bi-ji-6-jie-kou/"/>
    <id>https://xgyu.github.io/2021/09/26/golang-bi-ji-6-jie-kou/</id>
    <published>2021-09-26T03:46:18.000Z</published>
    <updated>2021-09-28T15:53:24.790Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;接口是Go语言的设计之道，它的核心思想在于接口和实现者的&lt;strong&gt;解耦&lt;/strong&gt;，接口实现者只需知道实现的是什么样子的接口，但无须指明实现哪一个接口。编译器知道最终编译时使用哪个类型实现哪个接口，或者接口应该由谁来实现。有一种说法更为贴切，称接口为Protoc</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Golang笔记(5)——函数</title>
    <link href="https://xgyu.github.io/2021/09/15/golang-bi-ji-5-han-shu/"/>
    <id>https://xgyu.github.io/2021/09/15/golang-bi-ji-5-han-shu/</id>
    <published>2021-09-15T15:46:41.000Z</published>
    <updated>2021-09-22T16:05:27.474Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;对于多返回值的函数而言，有两种情况，一是返回参数没有显式的变量名，二是有显式的变量名，他们的区别在于：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对于返回参数不显式指明变量名时，return语句必须将相应的参数指明，例如：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Golang笔记(4)——结构体及其他</title>
    <link href="https://xgyu.github.io/2021/09/13/golang-bi-ji-4-jie-gou-ti/"/>
    <id>https://xgyu.github.io/2021/09/13/golang-bi-ji-4-jie-gou-ti/</id>
    <published>2021-09-13T14:58:18.000Z</published>
    <updated>2021-09-23T16:03:05.889Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;结构体&quot;&gt;&lt;a href=&quot;#结构体&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Golang笔记(3)——Map</title>
    <link href="https://xgyu.github.io/2021/09/12/golang-bi-ji-3-map/"/>
    <id>https://xgyu.github.io/2021/09/12/golang-bi-ji-3-map/</id>
    <published>2021-09-12T05:16:49.000Z</published>
    <updated>2021-09-13T04:44:49.125Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;在Go语言中，map是哈希表的引用，写作&lt;code&gt;map[K]V&lt;/code&gt;，其中K是键(key)的数据类型，V是值(value)的数据类型。一旦确定了这个map，那么所有的键和所有的值都需要遵守相应的数据类型，注意，&lt;strong&gt;键(key)必须支持Go语言中的&lt;c</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Golang笔记(2)——数组和切片</title>
    <link href="https://xgyu.github.io/2021/09/09/golang-bi-ji-2-shu-zu-he-slice/"/>
    <id>https://xgyu.github.io/2021/09/09/golang-bi-ji-2-shu-zu-he-slice/</id>
    <published>2021-09-09T15:29:15.000Z</published>
    <updated>2021-09-12T05:14:54.851Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;复合数据类型&quot;&gt;&lt;a href=&quot;#复合数据类型&quot; class=&quot;headerlink&quot; title=&quot;复合数据类型&quot;&gt;&lt;/a&gt;复合数据类型&lt;/h2&gt;&lt;p&gt;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Golang笔记(1)——字符串</title>
    <link href="https://xgyu.github.io/2021/09/07/golang-bi-ji-1-zi-fu-chuan/"/>
    <id>https://xgyu.github.io/2021/09/07/golang-bi-ji-1-zi-fu-chuan/</id>
    <published>2021-09-07T15:09:33.000Z</published>
    <updated>2021-09-09T15:30:47.574Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h3 id=&quot;写在开头&quot;&gt;&lt;a href=&quot;#写在开头&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>前端学习路线(3)-CSS中级</title>
    <link href="https://xgyu.github.io/2021/06/07/qian-duan-xue-xi-lu-xian-3-css-zhong-ji/"/>
    <id>https://xgyu.github.io/2021/06/07/qian-duan-xue-xi-lu-xian-3-css-zhong-ji/</id>
    <published>2021-06-07T13:16:46.000Z</published>
    <updated>2021-06-27T17:29:09.370Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h3 id=&quot;层叠与继承&quot;&gt;&lt;a href=&quot;#层叠与继承&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>前端学习路线(2)-CSS初级</title>
    <link href="https://xgyu.github.io/2021/05/30/qian-duan-xue-xi-lu-xian-2-css-chu-ji/"/>
    <id>https://xgyu.github.io/2021/05/30/qian-duan-xue-xi-lu-xian-2-css-chu-ji/</id>
    <published>2021-05-30T07:33:06.000Z</published>
    <updated>2021-06-22T04:56:19.304Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h3 id=&quot;什么是CSS&quot;&gt;&lt;a href=&quot;#什么是CSS&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>小程序开发入门(1)</title>
    <link href="https://xgyu.github.io/2021/05/29/xiao-cheng-xu-kai-fa-ru-men-1/"/>
    <id>https://xgyu.github.io/2021/05/29/xiao-cheng-xu-kai-fa-ru-men-1/</id>
    <published>2021-05-29T12:37:32.000Z</published>
    <updated>2021-05-30T07:32:14.627Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h3 id=&quot;文件组成&quot;&gt;&lt;a href=&quot;#文件组成&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>前端学习路线(1)-HTML</title>
    <link href="https://xgyu.github.io/2021/05/19/qian-duan-xue-xi-lu-xian-1-html/"/>
    <id>https://xgyu.github.io/2021/05/19/qian-duan-xue-xi-lu-xian-1-html/</id>
    <published>2021-05-19T08:57:53.671Z</published>
    <updated>2021-05-20T13:05:17.946Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h3 id=&quot;写在开头&quot;&gt;&lt;a href=&quot;#写在开头&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    
  </entry>
  
</feed>
